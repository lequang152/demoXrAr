/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 gift-two.gltf --transform 
Files: gift-two.gltf [33.39KB] > C:\Users\Admin\Downloads\a_gift_box\gift-two-transformed.glb [88.98KB] (-166%)
Author: Rofnay (https://sketchfab.com/Rofnay)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/a-gift-box-1a53662e300b4d7e9ae39eba101409ea
Title: A Gift Box
*/
import { useAnimations, useGLTF } from "@react-three/drei";
import { Group, Vector3 as ThreeVector3 } from "three";
import { Product } from "../../types/products";
import { RefObject, useEffect, useRef, useState } from "react";
import useSound from "use-sound";
import { useFrame } from "@react-three/fiber";
import ExplosionEffect from "../effect/ExplosionEffect";
import { IProps } from "../../types/gift.props";

export function GiftTwo({ position, product, onClick }: IProps) {
  const group = useRef<Group>(null) as RefObject<Group>;

  const { nodes, materials, animations } = useGLTF(
    "src/model/gift-two.glb"
  ) as any;

  const { actions } = useAnimations(animations, group);

  const [exploding, setExploding] = useState(false);
  const [giftPosition, setGiftPosition] = useState(position);
  const [giftVisible, setGiftVisible] = useState(true);

  const [playSound] = useSound("src/components/dog/sound.wav");

  // const handlePointerDown = (event: any) => {
  //   // Xử lý sự kiện khi chú chó được click
  //   setExploding(true);
  //   setGiftVisible(false);
  //   playSound();
  //   onClick(true);
  //   if (group.current) {
  //     setGiftPosition(group.current.position);
  //   }
  //   // Biến mất sau một khoảng thời gian (ví dụ: 1 giây)
  //   setTimeout(() => {
  //     setExploding(false);
  //   }, 1000);
  // };

  // useEffect(() => {
  //   // Kiểm tra xem actions.animation có tồn tại không
  //   if (actions.animation) {
  //     // Chạy animation khi mô hình được tạo
  //     actions.animation.play();
  //   }
  // }, [actions.animation]);

  // useFrame(() => {
  //   // Cập nhật vị trí mô hình trong mỗi frame
  //   if (group.current) {
  //     group.current.position.y -= 0.05; // Điều chỉnh tốc độ rơi
  //     group.current.scale.set(0.5, 0.5, 0.5);
  //     group.current.rotation.y += 0.1;
  //   }
  // });

  return (
    <>
      <group
        ref={group}
        position={position}
        dispose={null}
        // onClick={handlePointerDown}
        visible={giftVisible}
      >
        <mesh
          geometry={nodes.Cube_Body_0.geometry}
          material={materials.Body}
          position={[0, 100, 0]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={1.127}
        />
        <mesh
          geometry={nodes.Cube002_Material_0.geometry}
          material={materials.Material}
          position={[0, 100, -99.172]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={[0.897, 1.19, 1.382]}
        />
        <instancedMesh
          args={[nodes.Cube006_Material_0.geometry, materials.Material, 8]}
          instanceMatrix={nodes.Cube006_Material_0.instanceMatrix}
        />
      </group>
      {exploding && <ExplosionEffect position={giftPosition} />}
    </>
  );
}

useGLTF.preload("src/model/gift-two.glb");
